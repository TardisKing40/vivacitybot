/// <reference types="node" />
import { EventEmitter } from "events";
import { DMChannel, NewsChannel, Snowflake, TextChannel } from 'discord.js';
export default class Embed extends EventEmitter {
    users: Snowflake[];
    channel: any;
    valu: any;
    sayfa: number;
    embedDes: Array<any>;
    private pagination;
    bos: any;
    embedString: string;
    constructor(authorization: Snowflake[], channel: TextChannel | DMChannel | NewsChannel, description: Array<any>, sayfa: number, color: string, value?: any);
    asyncForEach(array: Array<any>, callback: any): Promise<any>;
    /**
        * Kullanış;
        * @param {[message.athor.id]} Discord.User  Embed Listelendiği Zaman Mesajdaki Tepki Kim Tarafından Çalıştırılmasını Ayarlar.
        * @param {message.channel} Discord.Channel Embed İçin Gerekli Olan Kanal Bilgilerini Alır.
        * @param {["message1","message2]} Array Embed'in Description Mesajını Belirler;
        * @param {1} Number Embedin Kaç Mesajdan Sonra Listeli Olmasını Ayarlar.
        * @param {"BLUE"} String Embed Rengini Ayarlar.
        * @param {"mesaj"} String Array Mesajındaki Tür {mesaj:"Selam"} Şeklinde Olursa String Türünde En Sona "selam" paramteresini çekebilmek için mesaj yazdık ve Returun olarak "selam" çıkar
        */
    build(): Promise<any>;
}
